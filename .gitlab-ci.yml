stages:
  - deploy

deploy_to_production:
  extends: .docker_compose_deploy
  only:
    - master

.ssh:
  image: kroniak/ssh-client:3.19
  variables:
    SSH_HOST: $ENV_SSH_HOST
    SSH_USER: $ENV_SSH_USER
    SSH_ADDRESS: $SSH_USER@$SSH_HOST
  before_script:
    - mkdir -p ~/.ssh && chmod 700 ~/.ssh
    - echo -e "Host *\n\tStrictHostKeyChecking no\n\n" > ~/.ssh/config && chmod 600 ~/.ssh/config
    - echo "$ENV_PRIVATE_KEY_BASE64" | base64 -d > ~/.ssh/id_rsa && chmod 400 ~/.ssh/id_rsa
    - ssh-agent sh -c "ssh-add ~/.ssh/id_rsa"
    - ssh-keyscan -H "$SSH_HOST"

.docker_compose_deploy:
  extends: .ssh
  stage: deploy
  variables:
    REMOTE_DIR: "/home/$SSH_USER/app"
  script:
    # Create main directory on remote server
    - ssh $SSH_ADDRESS "mkdir -p $REMOTE_DIR"
    
    # Stop containers and remove old project
    - ssh $SSH_ADDRESS "cd $REMOTE_DIR && docker compose down || true"
    - ssh $SSH_ADDRESS "rm -rf $REMOTE_DIR/*"
    
    # Copy the new project and run containers
    - scp -r ./* $SSH_ADDRESS:$REMOTE_DIR/
    - ssh $SSH_ADDRESS "cd $REMOTE_DIR && docker compose up -d --build"
    
    # Clean up unused images
    - ssh $SSH_ADDRESS "docker system prune -f"
